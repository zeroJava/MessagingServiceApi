//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WMessageServiceApi.ValidationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/AuthorisationServer.Validation")]
    [System.SerializableAttribute()]
    public partial class ValidationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidationIsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidationIsSuccess {
            get {
                return this.ValidationIsSuccessField;
            }
            set {
                if ((this.ValidationIsSuccessField.Equals(value) != true)) {
                    this.ValidationIsSuccessField = value;
                    this.RaisePropertyChanged("ValidationIsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ValidationService.IValidationService")]
    public interface IValidationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidationService/AccessTokenValidation", ReplyAction="http://tempuri.org/IValidationService/AccessTokenValidationResponse")]
        WMessageServiceApi.ValidationService.ValidationResponse AccessTokenValidation(string encryptedToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidationService/AccessTokenValidation", ReplyAction="http://tempuri.org/IValidationService/AccessTokenValidationResponse")]
        System.Threading.Tasks.Task<WMessageServiceApi.ValidationService.ValidationResponse> AccessTokenValidationAsync(string encryptedToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidationService/UserCredentialValidation", ReplyAction="http://tempuri.org/IValidationService/UserCredentialValidationResponse")]
        WMessageServiceApi.ValidationService.ValidationResponse UserCredentialValidation(string credential);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidationService/UserCredentialValidation", ReplyAction="http://tempuri.org/IValidationService/UserCredentialValidationResponse")]
        System.Threading.Tasks.Task<WMessageServiceApi.ValidationService.ValidationResponse> UserCredentialValidationAsync(string credential);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IValidationServiceChannel : WMessageServiceApi.ValidationService.IValidationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidationServiceClient : System.ServiceModel.ClientBase<WMessageServiceApi.ValidationService.IValidationService>, WMessageServiceApi.ValidationService.IValidationService {
        
        public ValidationServiceClient() {
        }
        
        public ValidationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ValidationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValidationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValidationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WMessageServiceApi.ValidationService.ValidationResponse AccessTokenValidation(string encryptedToken) {
            return base.Channel.AccessTokenValidation(encryptedToken);
        }
        
        public System.Threading.Tasks.Task<WMessageServiceApi.ValidationService.ValidationResponse> AccessTokenValidationAsync(string encryptedToken) {
            return base.Channel.AccessTokenValidationAsync(encryptedToken);
        }
        
        public WMessageServiceApi.ValidationService.ValidationResponse UserCredentialValidation(string credential) {
            return base.Channel.UserCredentialValidation(credential);
        }
        
        public System.Threading.Tasks.Task<WMessageServiceApi.ValidationService.ValidationResponse> UserCredentialValidationAsync(string credential) {
            return base.Channel.UserCredentialValidationAsync(credential);
        }
    }
}
